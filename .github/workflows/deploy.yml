name: Deploy to EC2

on:
  push:
    branches:
      - master 
  pull_request:
    branches:
      - master  
env:
  TEST_DB_HOST: localhost
  TEST_DB_USER: testuser
  TEST_DB_PASSWORD: testpassword
  TEST_DB_NAME: envault_qa
  TEST_DB_PORT: 5432
  API_JWT_SECRET: test_secret      

jobs:
  test_api:
    name: Run tests for API, collect coverage and upload to Codecov  
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: envault_qa
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U testuser -d envault_qa"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run API tests
        run: npm run mtest:api

      - name: Create coverage directory if it doesn't exist
        run: mkdir -p ./api/coverage
      - name: Create .nyc_output directory if it doesn't exist        
        run: mkdir -p ./.nyc_output

      - name: Collect coverage statistics
        run: npm run test:api

      - name: Generate coverage report
        run: npm run coverage:api

      - name: Check coverage
        run: npm run check-coverage:api        

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: b759b58e-3d1d-46f1-8979-36a61f1a706d
          files: ./api/coverage/lcov.info
          fail_ci_if_error: true
          verbose: true

  test_worker:
    name: Run tests for worker, collect coverage and upload to Codecov  
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: envault_qa
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U testuser -d envault_qa"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run API tests
        run: npm run mtest:worker

      - name: Create coverage directory if it doesn't exist
        run: mkdir -p ./worker/coverage
      - name: Create .nyc_output directory if it doesn't exist        
        run: mkdir -p ./.nyc_output

      - name: Collect coverage statistics
        run: npm run test:worker

      - name: Generate coverage report
        run: npm run coverage:worker

      - name: Check coverage
        run: npm run check-coverage:worker        

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: b759b58e-3d1d-46f1-8979-36a61f1a706d
          files: ./worker/coverage/lcov.info
          fail_ci_if_error: true
          verbose: true                

  build_and_push:
    name: Build and Push Docker Images  
    runs-on: ubuntu-latest
    needs: 
      - test_api
      - test_worker

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and Push Docker Images
        run: |
          docker build -t uka17/envault-api:latest -f Dockerfiles/api .
          docker build -t uka17/envault-worker:latest -f Dockerfiles/worker .
          docker push uka17/envault-api:latest
          docker push uka17/envault-worker:latest

  deploy:
    name: Deploy containers to EC2
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: build_and_push 

    steps:
      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/envault
            git pull origin master

            # Refresh images
            docker pull uka17/envault-api:latest
            docker pull uka17/envault-worker:latest

            # Restart services
            docker-compose down
            docker-compose up -d --remove-orphans          
